package culturelandFront.controller.front.contents;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.json.simple.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import culturelandFront.core.abstr.NdnAbstractController;
import culturelandFront.core.helper.ListHelper;
import culturelandFront.core.util.FilesUtil;
import culturelandFront.core.util.NdnUtil;
import culturelandFront.core.util.PropUtil;
import culturelandFront.service.CategoryService;
import culturelandFront.service.ContentsService;
import culturelandFront.service.FileMngService;
import culturelandFront.vo.AdminUserVO;
import culturelandFront.vo.FileVO;
import egovframework.rte.fdl.idgnr.EgovIdGnrService;

/**
 *
 * 컨텐츠 관리 > AR 퀴즈관리
 * 
 **/
@Controller
@RequestMapping("/admin/contents/quiz")
public class QuizController extends NdnAbstractController{

	private final Logger logger = Logger.getLogger(this.getClass());
	
	@Resource
	private ContentsService contentsService;
	
	@Resource
	private CategoryService categoryService;
	
	@Resource
	private FileMngService fileMngService;	
	
	
    /** fileGnrService */
    @Resource(name="fileGnrService")
    private EgovIdGnrService fileGnrService;
    
    
	
	/**
	 * 리스트 
	 * 
	 */
	@RequestMapping( "/list.do")
	public String list	(
						HttpServletRequest request
						, Model model
						, @RequestParam Map param) {
		
		ListHelper listHelper = new ListHelper(param, 15);
		listHelper = contentsService.selectQuizListHelper(listHelper);
		
		
		model.addAttribute("listHelper", listHelper);	
		
		model.addAttribute("menu_id", "01");
		model.addAttribute("sub_menu_id", "05");
		
		return  "/admin/contents/quiz/list";
	}	

	
	
	/**
	 * 등록 및 수정 화면
	 * 
	 */
	@RequestMapping( "/write.do")
	public String write	(
						HttpServletRequest request
						, Model model
						, @RequestParam (required=false, defaultValue="")  String seq	
						
						, @RequestParam Map param) {
		
		
		if ( !"".equals(seq)){
			
			param.put("seq", seq);
			
			Map detail = contentsService.selectQuizDetail(param);
			model.addAttribute("detail", detail);
			
		}
		
		
		model.addAttribute("menu_id", "01");
		model.addAttribute("sub_menu_id", "05");
		
		return  "/admin/contents/quiz/write";
	}	
	
	
	
	
	
	
	/**
	  * 글쓰기
	  */
	@RequestMapping(value="/write_proc.json")
	@ResponseBody
	public String write_proc( final MultipartHttpServletRequest multiRequest,
						ModelMap model,  
						HttpSession session, 
						HttpServletRequest request,
			 			@RequestParam Map param,
			 			@RequestParam (required=false, defaultValue="")  String seq
			 			
			 		
					) throws Exception{
		
		AdminUserVO adminUser = (AdminUserVO)request.getSession().getAttribute(PropUtil.get("session.admin"));
		
		JSONObject obj = new JSONObject();
		
		int result = 0;
		List<FileVO> resultFile = null;
				
			
		if( "".equals(seq)){	
			result = contentsService.insertQuiz(param);
		 
		}else{
			
			result = contentsService.updateQuiz(param);
		}	
		
		if ( result > 0 ){
			obj.put("success", true);
		}else{
			obj.put("success", false);
		}
		return obj.toString();		
	}
	
	
	
	
	
	
	
	/**
	  * 삭제
	  */
	@RequestMapping(value="/del_proc.json")
	@ResponseBody
	public String del_proc( 
						ModelMap model,  
						HttpSession session, 
						HttpServletRequest request,
			 			@RequestParam Map param,
			 			@RequestParam(value="seqArray",  defaultValue="") String[] seqArray,	// 여러개 삭제
			 			@RequestParam (value="seq", defaultValue="")  String seq	//단일 삭제
			 		
					) throws Exception{
		
		JSONObject obj = new JSONObject();
				
		int result = 0;
		
		if ( !"".equals(seq)){
			param.put("seq", seq);			
		}
		
		if ( seqArray.length > 0){
			param.put("seqArray", seqArray);			
		}
		
		if ( !"".equals(seq) ||  seqArray.length > 0){
			
			
			List list = new ArrayList();
			List<FileVO> fvoList = new ArrayList();
			
			if ( !"".equals(seq) ){
				Map detail = contentsService.selectQuizDetail(param);
				list.add(detail);
					
			}else{		
				param.put("startNum", 0);
				param.put("endNum", 99999);
				list = contentsService.selectQuizList(param);
				
			}
			
			result = contentsService.deleteQuiz(param);
			
		}
		
		
		if ( result > 0 ){
			obj.put("success", true);
		}else{
			obj.put("success", false);
		}
		return obj.toString();		
	}
	
}
