package culturelandFront.controller.front.ksnet;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import culturelandFront.core.util.NdnUtil;
import culturelandFront.service.PurchaseService;

public class BankingController {

	
	/**
	 * 계좌인증
	 * @throws Exception 
	 * 
	 */
	public static HashMap applyAccount(Map dataMap) throws Exception {
	
		
		HashMap map = new HashMap();
		String ksNetSeq = dataMap.get("ksNetSeq").toString();
		System.out.println("ksNetSeq : "  + dataMap.get("ksNetSeq"));
		
		String reqDate = NdnUtil.getTimeStampString("yyyyMMdd");
		String reqTime = NdnUtil.getTimeStampString("HHmmss");
		
		
		
		//공통부 100
    	String classify = "         ";				//식별코드 			*9
    	String company = "FACTOLE1";				//업체코드			*8
    	String commonBankCode2 = "  ";		//은행코드2			*2
    	String message1 = "0600";//메세지코드			*4
    	String gubun = "400"; 			//업체구분			*3
    	String songsin = "1";					//송신횟수 고정값 '1'	*1
    	String preamble = ksNetSeq;				//전문번호			*6  업체코드(1) + 은행코드3(3) + 전송일자의 일(2)
    	String SendDate = reqDate;			//전송일자			*8
    	String SendTime = reqTime;				//전송시간			*6
    	String Response = "    ";				//응답코드			*4
    	String BankResponse = "    ";			//은행 응답코드		*4
    	String InquiryDate = "        ";		//조회일자			*8
    	String InquiryNumber = "      ";		//조회번호			*6
    	String BankNumber = "               ";	//은행 전문번호		*15
    	String commonBankCode3 = "099";		//은행코드3			*3
    	String spare = "             ";			//예비			*13
    	
    	String commonCode = classify + company + commonBankCode2 + message1 + gubun + songsin + preamble + SendDate + SendTime + Response
    			 			+ BankResponse + InquiryDate + InquiryNumber + BankNumber + commonBankCode3 + spare;
    	System.out.println("commonCode : " + commonCode.length());
    	System.out.println("commonCode : " + commonCode.getBytes().length);
    	
    	int accountLength = 16 - dataMap.get("accountNo").toString().getBytes().length;
    	
    	//개별부 200
    	String BusinessDate = reqDate.substring(4);	//거래일자			*4
    	String BankCode2 = "  ";	//은행코드2 (똑같음)			*2
    	String AccountNumber = dataMap.get("accountNo").toString() + NdnUtil.spaceAdd(accountLength);	//계좌번호			*16
    	String AccountName = NdnUtil.spaceAdd(22);	//예금주명			*22
    	String IdNumber = NdnUtil.spaceAdd(13);	//신원확인번호			*13
    	String IdCheck = "  ";	//신원확인번호 체크			*2
    	String CompanyAccountNo = NdnUtil.spaceAdd(20);	//업체 계좌번호			*20
    	String BankCode3 = dataMap.get("bankCode").toString();	//은행코드3			*3
    	String amount = NdnUtil.spaceAdd(13);	//금액			*13
    	String InquiryDotcom = " ";	//닷컴통장 조회			*1
    	String CertificationType = " ";	//당/타행 인증유형			*1
    	String NHgubun = " ";	//농협계좌구분			*1
    	String spare2 = NdnUtil.spaceAdd(102);	//예비			*102
		
		String devCode = BusinessDate + BankCode2 + AccountNumber + AccountName + IdNumber + IdCheck + CompanyAccountNo + 
				BankCode3 + amount + InquiryDotcom + CertificationType + NHgubun + spare2;
		
		System.out.println("devCode : " + devCode.length());
    	System.out.println("devCode : " + devCode.getBytes().length);
				
    	String sendMsg = commonCode + devCode;
		
		
		System.out.println("sendMsg : " + sendMsg.replaceAll(" ", "_"));
		System.out.println("BusinessDate : " + BusinessDate);
		
		
		

		map.put("reqDate", reqDate);		//요청일자
		map.put("reqTime", reqTime);		//요청시간
		map.put("svcType", "FCS");			//서비스타입
		map.put("bankCode", commonBankCode3);		//은행코드
		map.put("compCode", "FACTOLE1");		//업체코드(은행에서 부여)
		map.put("seqNo", ksNetSeq);			//전문일련번호
		map.put("msgCode", "0600400");		//전문구분 (개시)
		map.put("sendFlag", "N");			//전송여부
		map.put("recvFlag", "N");			//응답수신여부
		map.put("sendDate", reqDate);		//송신일자
		map.put("sendTime", null);			//송신시간
//		map.put("recvDate", null);			//수신일자
//		map.put("recvTime", null);			//수신시간
		map.put("sendMsg", sendMsg);		//요청전문
//		map.put("recvMsg", null);			//응답전문
		
		return map;
	}
	
	
	
	
	/**
	 * 송금이제
	 * @throws Exception 
	 * 
	 */
	public static HashMap transfer(Map dataMap) throws Exception {
	
		
		HashMap map = new HashMap();
		String ksNetSeq = dataMap.get("ksNetSeq").toString();
		System.out.println("ksNetSeq : "  + dataMap.get("ksNetSeq"));
		
		String reqDate = NdnUtil.getTimeStampString("yyyyMMdd");
		String reqTime = NdnUtil.getTimeStampString("HHmmss");
		
		//totalDeposit
		//CO_Buy account
		//CO_Buy bank
		
		//공통부 100
    	String classify = "         ";				//식별코드 			*9
    	String company = "FACTOLE1";				//업체코드			*8
    	String commonBankCode2 = "  ";		//은행코드2			*2
    	String message1 = "0100";//메세지코드			*4
    	String gubun = "100"; 			//업체구분			*3
    	String songsin = "1";					//송신횟수 고정값 '1'	*1
    	String preamble = ksNetSeq;				//전문번호			*6  업체코드(1) + 은행코드3(3) + 전송일자의 일(2)
    	String SendDate = reqDate;			//전송일자			*8
    	String SendTime = reqTime;				//전송시간			*6
    	String Response = "    ";				//응답코드			*4
    	String BankResponse = "    ";			//은행 응답코드		*4
    	String InquiryDate = "        ";		//조회일자			*8
    	String InquiryNumber = "      ";		//조회번호			*6
    	String BankNumber = "               ";	//은행 전문번호		*15
    	String commonBankCode3 = "039";		//은행코드3			*3
    	String spare = "             ";			//예비			*13
    	
    	String commonCode = classify + company + commonBankCode2 + message1 + gubun + songsin + preamble + SendDate + SendTime + Response
    			 			+ BankResponse + InquiryDate + InquiryNumber + BankNumber + commonBankCode3 + spare;
    	System.out.println("commonCode : " + commonCode.length());
    	System.out.println("commonCode : " + commonCode.getBytes().length);
    	
    	int accountLength = 15 - dataMap.get("accountNo").toString().getBytes().length;
    	
    	int aa = 0011;
    	String bb = "0011";
    	//개별부 200
    	String companyAccountNumber = "8003344256339  ";	//가상계좌번호 (출금) (*15
    	String password = "        ";	// 					  비밀번호 *8
    	String bokkiCode = "      ";//복기부호 *6
    	int totalDeposit = Integer.parseInt(dataMap.get("totalDeposit").toString());
    	String withdraw = NdnUtil.fillZero(totalDeposit, 13);	//출금금액	*13
    	System.out.println("위드"+withdraw);
    	String balanceCode = " ";	//잔액부호	*1  비고 +,-,space,/
    	String balance = "0000000000000";	//출금 후 잔액 * 13/
    	String BankCode2 = "  ";	//입금은행코드2 *2
    	String AccountNumber = dataMap.get("accountNo").toString() + NdnUtil.spaceAdd(accountLength); //15
    	String fee = "000000000";	//수수료			*9
    	String transferTime = reqTime;	//이체시각			*6
    	String sendAccountHistory = "                    ";	//입금 계좌 적요 	*20
    	String cms =NdnUtil.spaceAdd(16); //cmd 코드
    	String IdNumber = NdnUtil.spaceAdd(13);
    	String autoTransfer ="  ";	// 자동이체 구분 *2
    	String widthdrawAccountHistory = "                    ";	//출금계좌 적요	*20
    	String BankCode3 = dataMap.get("bankCode").toString();	//입금은행코드3			*3
    	String salary =" "; //급여 구분 *1
    	String spare2 = NdnUtil.spaceAdd(37);	//예비*37
    	
		String devCode = companyAccountNumber + password + bokkiCode + withdraw + balanceCode + balance + BankCode2
				 + AccountNumber + fee + transferTime + sendAccountHistory + cms + IdNumber+ autoTransfer+widthdrawAccountHistory +
				BankCode3 +salary +spare2;
		
		System.out.println("devCode : " + devCode.length());
    	System.out.println("devCode : " + devCode.getBytes().length);
				
    	String sendMsg = commonCode + devCode;
		
		
		System.out.println("sendMsg : " + sendMsg.replaceAll(" ", "_"));
		
		
		

		map.put("reqDate", reqDate);		//요청일자
		map.put("reqTime", reqTime);		//요청시간
		map.put("svcType", "PAY");			//서비스타입
		map.put("bankCode", commonBankCode3);		//은행코드
		map.put("compCode", "FACTOLE1");		//업체코드(은행에서 부여)
		map.put("seqNo", ksNetSeq);			//전문일련번호
		map.put("msgCode", "0100100");		//전문구분 (개시)
		map.put("sendFlag", "N");			//전송여부
		map.put("recvFlag", "N");			//응답수신여부
		map.put("sendDate", reqDate);		//송신일자
		map.put("sendTime", null);			//송신시간
//		map.put("recvDate", null);			//수신일자
//		map.put("recvTime", null);			//수신시간
		map.put("sendMsg", sendMsg);		//요청전문
//		map.put("recvMsg", null);			//응답전문
		
		map.put("totalDeposit", totalDeposit);		//송금금액
		
		return map;
	}
	
	
	
	
	
	
	
	
	
}
